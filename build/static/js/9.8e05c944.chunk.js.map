{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","app/voteApp/Configuration.js","app/voteApp/Division/DivisionService.js","app/voteApp/Division/NewDivision.js","app/voteApp/Division/EditDivision.js","app/voteApp/Division/DivisionDetails.js","app/voteApp/Division/DivisionController.js"],"names":["module","exports","runtime","undefined","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","method","arg","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","GenStateSuspendedYield","value","makeInvokeMethod","fn","obj","call","err","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","key","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","Configuration","BASE_URL","DIVISION_URL","DivisionService","config","fetch","response","ok","handleResponseError","json","console","log","divisions","divisionArray","_embedded","collectionDivisions","_links","href","catch","handleError","divisionLink","division","newDivision","mode","headers","body","JSON","stringify","divisionlink","link","status","message","NewDivision","props","onCancel","bind","onSubmit","handleInputChange","code","caption","is_Active","event","target","setState","className","maxLength","required","onChange","placeholder","onClick","Component","EditDivision","itemToEdit","item","summary","year","country","description","validator","validateInputs","pattern","DivisionDetails","onEdit","onDelete","window","confirm","Division","onSelect","onNewDivision","onEditDivision","onCancelEdit","onCreateDivision","onDeleteDivision","showDetails","editDivision","selectedDivision","getDivisions","listDivisions","map","onUpdateDivision","retrieveDivisions","clearState","getDivision","updateDivision","createDivision","deleteDivision","res"],"mappings":"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","file":"static/js/9.8e05c944.chunk.js","sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar runtime = function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n    return generator;\n  }\n\n  exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n\n  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n\n\n  var IteratorPrototype = {};\n\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\"; // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      prototype[method] = function (arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n  };\n\n  exports.mark = function (genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  }; // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n\n\n  exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n\n        if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function (value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function (err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function (unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function (error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n      // invocations of the iterator.\n      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n\n\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n\n  exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n\n  exports.async = function (innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));\n    return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        } // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n        var record = tryCatch(innerFn, self, context);\n\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted; // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  } // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (!info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n      context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    } // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n\n\n    context.delegate = null;\n    return ContinueSentinel;\n  } // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n\n\n  defineIteratorMethods(Gp);\n  Gp[toStringTagSymbol] = \"Generator\"; // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n  Gp[iteratorSymbol] = function () {\n    return this;\n  };\n\n  Gp.toString = function () {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    keys.reverse(); // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      } // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n\n\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n          return next;\n        };\n\n        return next.next = next;\n      }\n    } // Return an iterator with no values.\n\n\n    return {\n      next: doneResult\n    };\n  }\n\n  exports.values = values;\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      this.prev = 0;\n      this.next = 0; // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n      this.method = \"next\";\n      this.arg = undefined;\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n    stop: function stop() {\n      this.done = true;\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" || record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      } // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  }; // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n\n  return exports;\n}( // If this script is executing as a CommonJS module, use module.exports\n// as the regeneratorRuntime namespace. Otherwise create a new empty\n// object. Either way, the resulting object will be used to initialize\n// the regeneratorRuntime variable at the top of this file.\ntypeof module === \"object\" ? module.exports : {});\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","class Configuration {\r\n\r\n    BASE_URL = \"http://127.0.0.1:8090/\";\r\n    DIVISION_URL = \"http://127.0.0.1:8090/divisions/\";\r\n}\r\nexport default Configuration;","import Configuration from '../Configuration';\r\n\r\nclass DivisionService {\r\n\r\n    constructor() {\r\n        this.config = new Configuration();\r\n    }\r\n\r\n    async retrieveDivisions() {\r\n        return fetch(this.config.DIVISION_URL)\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    this.handleResponseError(response);\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(json => {\r\n                console.log(\"Retrieved divisions:\");\r\n                console.log(json);\r\n                const divisions = [];\r\n                const divisionArray = json._embedded.collectionDivisions;\r\n                for(var i = 0; i < divisionArray.length; i++) {\r\n                    divisionArray[i][\"link\"] =  divisionArray[i]._links.self.href;\r\n                    divisions.push(divisionArray[i]);\r\n                }\r\n                return divisions;\r\n            })\r\n            .catch(error => {\r\n                this.handleError(error);\r\n            });\r\n    }\r\n\r\n    async getDivision(divisionLink) {\r\n        console.log(\"DivisionService.getDivision():\");\r\n        console.log(\"Division: \" + divisionLink);\r\n        return fetch(divisionLink)\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    this.handleResponseError(response);\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(division => {\r\n                    division[\"link\"] = division._links.self.href;\r\n                    return division;\r\n                }\r\n            )\r\n            .catch(error => {\r\n                this.handleError(error);\r\n            });\r\n    }\r\n\r\n    async createDivision(newDivision) {\r\n        console.log(\"DivisionService.createDivision():\");\r\n        console.log(newDivision);\r\n        return fetch(this.config.DIVISION_URL, {\r\n            method: \"POST\",\r\n            mode: \"cors\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(newDivision)\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    this.handleResponseError(response);\r\n                }\r\n                return response.json();\r\n            })\r\n            .catch(error => {\r\n                this.handleError(error);\r\n            });\r\n    }\r\n\r\n    async deleteDivision(divisionlink) {\r\n        console.log(\"DivisionService.deleteDivision():\");\r\n        console.log(\"division: \" + divisionlink);\r\n        return fetch(divisionlink, {\r\n            method: \"DELETE\",\r\n            mode: \"cors\"\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    this.handleResponseError(response);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                this.handleError(error);\r\n            });\r\n    }\r\n\r\n    async updateDivision(division) {\r\n        console.log(\"Division.updateDivision():\");\r\n        console.log(division);\r\n        return fetch(division.link, {\r\n            method: \"PUT\",\r\n            mode: \"cors\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(division)\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    this.handleResponseError(response);\r\n                }\r\n                return response.json();\r\n            })\r\n            .catch(error => {\r\n                this.handleError(error);\r\n            });\r\n    }\r\n\r\n    handleResponseError(response) {\r\n        throw new Error(\"HTTP error, status = \" + response.status);\r\n    }\r\n\r\n    handleError(error) {\r\n        console.log(error.message);\r\n    }\r\n\r\n}\r\nexport default DivisionService;","import React, {Component} from 'react';\r\n\r\n// import './App.css';\r\n\r\nclass NewDivision extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onCancel = this.onCancel.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.state = {\r\n            code: '',\r\n            caption: '',\r\n            is_Active: ''\r\n        };\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    onCancel() {\r\n        this.props.onCancel();\r\n    }\r\n\r\n    onSubmit() {\r\n        this.props.onSubmit(this.state);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"input-panel\">\r\n                <span className=\"form-caption\">New Division:</span>\r\n                <div>\r\n                    <label className=\"field-name\">Code:<br/>\r\n                        <input value={this.state.code} name=\"code\" maxLength=\"40\" required\r\n                               onChange={this.handleInputChange} placeholder=\"code\"/>\r\n                    </label>\r\n                </div>\r\n                <div>\r\n                    <label className=\"field-name\">Caption:<br/>\r\n                        <input value={this.state.caption} name=\"caption\" maxLength=\"40\" required\r\n                               onChange={this.handleInputChange} placeholder=\"caption\"/>\r\n                    </label>\r\n                </div>\r\n                <div>\r\n                    <label className=\"field-name\">Is Active:<br/>\r\n                        <input type=\"checkbox\" value={this.state.is_Active} name=\"is_Active\"\r\n                               onChange={this.handleInputChange} />\r\n                    </label>\r\n                </div>\r\n                <br/>\r\n                <button onClick={() => this.onCancel()}>Cancel</button>\r\n                &nbsp;\r\n                <button onClick={() => this.onSubmit()}>Create</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewDivision;","import React, { Component } from 'react';\r\n\r\nclass EditDivision extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onCancel = this.onCancel.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        const itemToEdit = props.item;\r\n        this.state = {\r\n            name: itemToEdit.name,\r\n            summary: itemToEdit.summary,\r\n            year: itemToEdit.year,\r\n            country: itemToEdit.country,\r\n            description: itemToEdit.description,\r\n            link: itemToEdit.link\r\n        };\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    onCancel() {\r\n        this.props.onCancel();\r\n    }\r\n\r\n    onSubmit() {\r\n        if (this.validator.validateInputs(this.state)) {\r\n            this.props.onSubmit(this.state);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"input-panel\">\r\n                <span className=\"form-caption\">Edit item:</span>&nbsp;<span>{this.state.name}</span>\r\n                <div>\r\n                    <label className=\"field-name\">Name:<br/>\r\n                        <input value={this.state.name} name=\"name\" maxLength=\"40\" required onChange={this.handleInputChange} placeholder=\"item name\" />\r\n                    </label>\r\n                </div>\r\n                <div>\r\n                    <label className=\"field-name\">Summary:<br/>\r\n                        <input value={this.state.summary} name=\"summary\" maxLength=\"40\" required onChange={this.handleInputChange} placeholder=\"summary\" />\r\n                    </label>\r\n                </div>\r\n                <div>\r\n                    <label className=\"field-name\">Year:<br/>\r\n                        <input value={this.state.year} name=\"year\" maxLength=\"4\" pattern=\"[0-9]{1,4}\" onChange={this.handleInputChange} placeholder=\"year\" />\r\n                    </label>\r\n                </div>\r\n                <div>\r\n                    <label className=\"field-name\">Country:<br/>\r\n                        <input value={this.state.country} name=\"country\" maxLength=\"2\" pattern=\"[a-z|A-Z]{2}\" onChange={this.handleInputChange} placeholder=\"country\" />\r\n                    </label>\r\n                </div>\r\n                <div>\r\n                    <label className=\"field-name\">Description:<br/>\r\n                        <textarea value={this.state.description} name=\"description\" onChange={this.handleInputChange} placeholder=\"description\" />\r\n                    </label>\r\n                </div>\r\n                <br/>\r\n                <button onClick={() => this.onCancel()}>Cancel</button>&nbsp;\r\n                <button onClick={() => this.onSubmit()}>Update</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditDivision;","import React, { Component } from 'react';\r\n// import './App.css';\r\n\r\nclass DivisionDetails extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onEdit = this.onEdit.bind(this);\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n    render() {\r\n        const item = this.props.item;\r\n        return (\r\n            <div className=\"input-panel\">\r\n                <span className=\"form-caption\">{ item.name}</span>\r\n                <div><span className=\"field-name\">Name:</span><br/> {item.name}</div>\r\n                <div><span className=\"field-name\">Summary:</span><br/> {item.summary}</div>\r\n                <div><span className=\"field-name\">Year:</span><br/> {item.year}</div>\r\n                <div><span className=\"field-name\">Country:</span><br/> {item.country}</div>\r\n                <div><span className=\"field-name\">Description:</span><br/> {item.description}</div>\r\n                <br/>\r\n                <button onClick={() => this.onDelete()}>Delete</button>&nbsp;\r\n                <button onClick={() => this.onEdit()}>Edit</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onEdit() {\r\n        this.props.onEdit();\r\n    }\r\n\r\n    onDelete() {\r\n        const item = this.props.item;\r\n        if(window.confirm(\"Are you sure to delete item: \" + item.name + \" ?\")) {\r\n            this.props.onDelete(item.link);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default DivisionDetails;","import React, { Component } from 'react';\r\nimport DivisionService from \"./DivisionService\";\r\nimport NewDivision from './NewDivision';\r\nimport EditDivision from './EditDivision';\r\nimport DivisionDetails from \"./DivisionDetails\";\r\n\r\n\r\nclass Division extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.DivisionService = new DivisionService();\r\n        this.onSelect = this.onSelect.bind(this);\r\n        this.onNewDivision = this.onNewDivision.bind(this);\r\n        this.onEditDivision = this.onEditDivision.bind(this);\r\n        this.onCancel = this.onCancel.bind(this);\r\n        this.onCancelEdit = this.onCancelEdit.bind(this);\r\n        this.onCreateDivision = this.onCreateDivision.bind(this);\r\n        //this.onUpdateDivision = this.onUpdateDivision.bind(this);\r\n        this.onDeleteDivision = this.onDeleteDivision.bind(this);\r\n        this.state = {\r\n            showDetails: false,\r\n            editDivision: false,\r\n            selectedDivision: null,\r\n            newDivision: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDivisions();\r\n    }\r\n\r\n    render() {\r\n        const divisions = this.state.divisions;\r\n        if(!divisions) return null;\r\n        const showDetails = this.state.showDetails;\r\n        const selectedDivision = this.state.selectedDivision;\r\n        const newDivision = this.state.newDivision;\r\n        const editDivision = this.state.editDivision;\r\n        const listDivisions = divisions.map((division) =>\r\n            <li key={division.link} onClick={() => this.onSelect(division.link)}>\r\n                <span className=\"division-name\">{division.code}</span>&nbsp;|&nbsp; {division.caption}&nbsp;|&nbsp; {division.is_Active}\r\n            </li>\r\n        );\r\n\r\n        return (\r\n            <div className=\"Division\">\r\n                <ul className=\"divsions\">\r\n                    {listDivisions}\r\n                </ul>\r\n                <br/>\r\n                <button type=\"button\" name=\"button\" onClick={() => this.onNewDivision()}>New Division</button>\r\n                <br/>\r\n                {newDivision && <NewDivision onSubmit={this.onCreateDivision} onCancel={this.onCancel}/>}\r\n                {showDetails && selectedDivision && <DivisionDetails division={selectedDivision} onEdit={this.onEditDivision}  onDelete={this.onDeleteDivision} />}\r\n                {editDivision && selectedDivision && <EditDivision onSubmit={this.onUpdateDivision} onCancel={this.onCancelEdit} item={selectedDivision} />}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getDivisions() {\r\n        this.DivisionService.retrieveDivisions().then(divisions => {\r\n                this.setState({divisions: divisions});\r\n            }\r\n        );\r\n    }\r\n\r\n    onSelect(divisionLink) {\r\n        this.clearState();\r\n        this.DivisionService.getDivision(divisionLink).then(division => {\r\n                this.setState({\r\n                    showDetails: true,\r\n                    selectedDivision: division\r\n                });\r\n            }\r\n        );\r\n    }\r\n\r\n    onCancel() {\r\n        this.clearState();\r\n    }\r\n\r\n    onNewDivision() {\r\n        this.clearState();\r\n        this.setState({\r\n            newDivision: true\r\n        });\r\n    }\r\n\r\n    onEditDivision() {\r\n        this.setState({\r\n            showDetails: false,\r\n            editDivision: true,\r\n            newDivision: null\r\n        });\r\n    }\r\n\r\n    onCancelEdit() {\r\n        this.setState({\r\n            showDetails: true,\r\n            editDivision: false,\r\n            newDivision: null\r\n        });\r\n    }\r\n\r\n    onUpdateItem(division) {\r\n        this.clearState();\r\n        this.DivisionService.updateDivision(division).then(division => {\r\n                this.getDivisions();\r\n            }\r\n        );\r\n    }\r\n\r\n    onCreateDivision(newDivision) {\r\n        this.clearState();\r\n        this.DivisionService.createDivision(newDivision).then(division => {\r\n                this.getDivisions();\r\n            }\r\n        );\r\n    }\r\n\r\n    onDeleteDivision(divisionLink) {\r\n        this.clearState();\r\n        this.DivisionService.deleteDivision(divisionLink).then(res => {\r\n                this.getDivisions();\r\n            }\r\n        );\r\n    }\r\n\r\n    clearState() {\r\n        this.setState({\r\n            showDetails: false,\r\n            selectedDivision: null,\r\n            editDivision: false,\r\n            newDivision: null\r\n        });\r\n    }\r\n}\r\n\r\nexport default Division;"],"sourceRoot":""}