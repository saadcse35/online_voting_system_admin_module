{"ast":null,"code":"// import Configuration from '../Configuration';\n// const DIVISION_URL = \"http://127.0.0.1:8090/divinfo\";\nclass DivisionService {\n  constructor() {\n    this.DIVISION_URL = \"http://127.0.0.1:8090/divinfo\";\n  }\n\n  // constructor() {\n  //     this.config = new Configuration();\n  // }\n  async retrieveDivisions() {\n    return fetch(this.config.DIVISION_URL).then(response => {\n      if (!response.ok) {\n        this.handleResponseError(response);\n      }\n\n      return response.json();\n    }).then(json => {\n      console.log(\"Retrieved divisions:\");\n      console.log(json);\n      const divisions = [];\n      const divisionArray = json._embedded.divinfo;\n\n      for (var i = 0; i < divisionArray.length; i++) {\n        divisionArray[i][\"link\"] = divisionArray[i]._links.self.href;\n        divisions.push(divisionArray[i]);\n      }\n\n      return divisions;\n    }).catch(error => {\n      this.handleError(error);\n    });\n  }\n\n  async getDivision(divisionLink) {\n    console.log(\"DivisionService.getDivision():\");\n    console.log(\"Division: \" + divisionLink);\n    return fetch(divisionLink).then(response => {\n      if (!response.ok) {\n        this.handleResponseError(response);\n      }\n\n      return response.json();\n    }).then(division => {\n      division[\"link\"] = division._links.self.href;\n      return division;\n    }).catch(error => {\n      this.handleError(error);\n    });\n  }\n\n  async createDivision(newDivision) {\n    console.log(\"DivisionService.createDivision():\");\n    console.log(newDivision);\n    return fetch(this.config.DIVISION_URL, {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newDivision)\n    }).then(response => {\n      if (!response.ok) {\n        this.handleResponseError(response);\n      }\n\n      return response.json();\n    }).catch(error => {\n      this.handleError(error);\n    });\n  }\n\n  async deleteDivision(divisionlink) {\n    console.log(\"DivisionService.deleteDivision():\");\n    console.log(\"division: \" + divisionlink);\n    return fetch(divisionlink, {\n      method: \"DELETE\",\n      mode: \"cors\"\n    }).then(response => {\n      if (!response.ok) {\n        this.handleResponseError(response);\n      }\n    }).catch(error => {\n      this.handleError(error);\n    });\n  }\n\n  async updateDivision(division) {\n    console.log(\"Division.updateDivision():\");\n    console.log(division);\n    return fetch(division.link, {\n      method: \"PUT\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(division)\n    }).then(response => {\n      if (!response.ok) {\n        this.handleResponseError(response);\n      }\n\n      return response.json();\n    }).catch(error => {\n      this.handleError(error);\n    });\n  }\n\n  handleResponseError(response) {\n    throw new Error(\"HTTP error, status = \" + response.status);\n  }\n\n  handleError(error) {\n    console.log(error.message);\n  }\n\n}\n\nexport default DivisionService;","map":{"version":3,"sources":["D:\\UniversityFinalProject\\frontEnd\\src\\app\\voteApp\\Division\\DivisionService.js"],"names":["DivisionService","DIVISION_URL","retrieveDivisions","fetch","config","then","response","ok","handleResponseError","json","console","log","divisions","divisionArray","_embedded","divinfo","i","length","_links","self","href","push","catch","error","handleError","getDivision","divisionLink","division","createDivision","newDivision","method","mode","headers","body","JSON","stringify","deleteDivision","divisionlink","updateDivision","link","Error","status","message"],"mappings":"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","sourcesContent":["// import Configuration from '../Configuration';\r\n\r\n // const DIVISION_URL = \"http://127.0.0.1:8090/divinfo\";\r\nclass DivisionService {\r\n    DIVISION_URL = \"http://127.0.0.1:8090/divinfo\";\r\n    // constructor() {\r\n    //     this.config = new Configuration();\r\n    // }\r\n\r\n    async retrieveDivisions() {\r\n        return fetch(this.config.DIVISION_URL)\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    this.handleResponseError(response);\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(json => {\r\n                console.log(\"Retrieved divisions:\");\r\n                console.log(json);\r\n                const divisions = [];\r\n                const divisionArray = json._embedded.divinfo;\r\n                for(var i = 0; i < divisionArray.length; i++) {\r\n                    divisionArray[i][\"link\"] =  divisionArray[i]._links.self.href;\r\n                    divisions.push(divisionArray[i]);\r\n                }\r\n                return divisions;\r\n            })\r\n            .catch(error => {\r\n                this.handleError(error);\r\n            });\r\n    }\r\n\r\n    async getDivision(divisionLink) {\r\n        console.log(\"DivisionService.getDivision():\");\r\n        console.log(\"Division: \" + divisionLink);\r\n        return fetch(divisionLink)\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    this.handleResponseError(response);\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(division => {\r\n                    division[\"link\"] = division._links.self.href;\r\n                    return division;\r\n                }\r\n            )\r\n            .catch(error => {\r\n                this.handleError(error);\r\n            });\r\n    }\r\n\r\n    async createDivision(newDivision) {\r\n        console.log(\"DivisionService.createDivision():\");\r\n        console.log(newDivision);\r\n        return fetch(this.config.DIVISION_URL, {\r\n            method: \"POST\",\r\n            mode: \"cors\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(newDivision)\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    this.handleResponseError(response);\r\n                }\r\n                return response.json();\r\n            })\r\n            .catch(error => {\r\n                this.handleError(error);\r\n            });\r\n    }\r\n\r\n    async deleteDivision(divisionlink) {\r\n        console.log(\"DivisionService.deleteDivision():\");\r\n        console.log(\"division: \" + divisionlink);\r\n        return fetch(divisionlink, {\r\n            method: \"DELETE\",\r\n            mode: \"cors\"\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    this.handleResponseError(response);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                this.handleError(error);\r\n            });\r\n    }\r\n\r\n    async updateDivision(division) {\r\n        console.log(\"Division.updateDivision():\");\r\n        console.log(division);\r\n        return fetch(division.link, {\r\n            method: \"PUT\",\r\n            mode: \"cors\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(division)\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    this.handleResponseError(response);\r\n                }\r\n                return response.json();\r\n            })\r\n            .catch(error => {\r\n                this.handleError(error);\r\n            });\r\n    }\r\n\r\n    handleResponseError(response) {\r\n        throw new Error(\"HTTP error, status = \" + response.status);\r\n    }\r\n\r\n    handleError(error) {\r\n        console.log(error.message);\r\n    }\r\n\r\n}\r\nexport default DivisionService;"]},"metadata":{},"sourceType":"module"}